knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(ggplot2)
dosya_yolu <- "Sales_Data.csv"
veri <- read.csv(dosya_yolu)
# veri setinin bir kısmını inceliyoruz
head(veri)
# veri setimizdeki sütunların tipini öğreniyoruz
sapply(veri, class)
# Eksik verileri kontrol etme
sum(is.na(veri))
# Order.Date sütununu Date-time formatına dönüştürme
veri$Order.Date <- as.POSIXct(veri$Order.Date, format = "%Y-%m-%d %H:%M:%S")
# Hour bilgisini analizlerimizde kullanmayacağımız için o sütunu kaldırıyoruz
veri <- veri[, -which(names(veri) == "Hour")]
# City sütunu kategorik olduğu için faktöre dönüştürüyoruz
veri$City <- as.factor(veri$City)
# Eksik verileri kontrol etme
sum(is.na(veri))
# Order.Date sütununu Date-time formatına dönüştürme
veri$Order.Date <- as.POSIXct(veri$Order.Date, format = "%Y-%m-%d %H:%M:%S")
# Hour bilgisini analizlerimizde kullanmayacağımız için o sütunu kaldırıyoruz
veri <- veri[, -which(names(veri) == "Hour")]
# City sütunu kategorik olduğu için faktöre dönüştürüyoruz
veri$City <- as.factor(veri$City)
# Gerekli kütüphaneleri yükleyin
library(httr)
library(jsonlite)
# ERPNext API URL'i
url <- "http://localhost:8080/api/resource/newdoc/1"
api_key <- "fa488bc46721e44"
api_secret <- "091837bb3acec3f"
# API anahtarlarını kullanarak Authorization başlığı oluşturma
headers <- add_headers(
"Authorization" = paste("token", api_key, ":", api_secret)
)
# GET isteğini yap
response <- GET(url, headers)
# Tekrarlayan müşterilerin tespit edilmesi ve alışveriş sayılarının hesaplanması
tekrarlayan_musteriler <- veri %>% group_by(Purchase.Address) %>% summarise(Satis_Sayisi = n()) %>% filter(Satis_Sayisi > 1) %>% arrange(desc(Satis_Sayisi))
# Tekrarlayan müşterilerin toplam ve ortalama satışlarını hesaplama
musteri_analizi <- veri %>% filter(Purchase.Address %in% tekrarlayan_musteriler$Purchase.Address) %>% group_by(Purchase.Address) %>% summarise(Toplam_Satis = sum(Sales), Ortalama_Satis = mean(Sales), Satis_Sayisi = n()) %>% arrange(desc(Satis_Sayisi))
# Teşvik stratejisi oluşturma
musteri_analizi <- musteri_analizi %>% mutate(Tesvik = ifelse(Satis_Sayisi >= 5, "10% indirim", ifelse(Satis_Sayisi >= 3, "5% indirim", "Tesvik yok")))
#ŞEHİRLERE GÖRE ÜRÜN SATIŞINI ANALİZ ETME
ggplot(veri, aes(x = City, y = Sales, fill = City)) +
geom_boxplot() +
theme_minimal() +
labs(title = "Sehir Bazında Satislar", x = "Sehir", y = "Satis") +
scale_fill_brewer(palette = "Set3")  # Renk paleti
# Teşvik stratejisi oluşturma
musteri_analizi <- musteri_analizi %>% mutate(Tesvik = ifelse(Satis_Sayisi >= 5, "10% indirim", ifelse(Satis_Sayisi >= 3, "5% indirim", "Tesvik yok")))
# Aylık satışları toplama
veri$Order.Date <- as.Date(veri$Order.Date)  # Tarih sütununu uygun formata dönüştürme
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(ggplot2)
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(ggplot2)
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(ggplot2)
# Eksik verileri kontrol etme
sum(is.na(veri))
# Order.Date sütununu Date-time formatına dönüştürme
veri$Order.Date <- as.POSIXct(veri$Order.Date, format = "%Y-%m-%d %H:%M:%S")
# Eksik verileri kontrol etme
sum(is.na(veri))
# Order.Date sütununu Date-time formatına dönüştürme
veri$Order.Date <- as.POSIXct(veri$Order.Date, format = "%Y-%m-%d %H:%M:%S")
dosya_yolu <- "Sales_Data.csv"
veri <- read.csv(dosya_yolu)
# veri setinin bir kısmını inceliyoruz
head(veri)
# veri setimizdeki sütunların tipini öğreniyoruz
sapply(veri, class)
# Eksik verileri kontrol etme
sum(is.na(veri))
# Order.Date sütununu Date-time formatına dönüştürme
veri$Order.Date <- as.POSIXct(veri$Order.Date, format = "%Y-%m-%d %H:%M:%S")
# Hour bilgisini analizlerimizde kullanmayacağımız için o sütunu kaldırıyoruz
veri <- veri[, -which(names(veri) == "Hour")]
# City sütunu kategorik olduğu için faktöre dönüştürüyoruz
veri$City <- as.factor(veri$City)
# Eksik verileri kontrol etme
sum(is.na(veri))
# Order.Date sütununu Date-time formatına dönüştürme
veri$Order.Date <- as.POSIXct(veri$Order.Date, format = "%Y-%m-%d %H:%M:%S")
# Hour bilgisini analizlerimizde kullanmayacağımız için o sütunu kaldırıyoruz
veri <- veri[, -which(names(veri) == "Hour")]
# City sütunu kategorik olduğu için faktöre dönüştürüyoruz
veri$City <- as.factor(veri$City)
# Eksik verileri kontrol etme
sum(is.na(veri))
# Order.Date sütununu Date-time formatına dönüştürme
veri$Order.Date <- as.POSIXct(veri$Order.Date, format = "%Y-%m-%d %H:%M:%S")
# Eksik verileri kontrol etme
sum(is.na(veri))
# Order.Date sütununu Date-time formatına dönüştürme
veri$Order.Date <- as.POSIXct(veri$Order.Date, format = "%Y-%m-%d %H:%M:%S")
# Eksik verileri kontrol etme
sum(is.na(veri))
# Order.Date sütununu Date-time formatına dönüştürme
veri$Order.Date <- as.POSIXct(veri$Order.Date, format = "%Y-%m-%d %H:%M:%S")
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(ggplot2)
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(ggplot2)
